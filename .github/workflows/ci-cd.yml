name: Banking Capstone CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test-backend:
    name: Test Backend Services
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service:
          [
            auth-service,
            transaction-service,
            credit-card-service,
            gift-card-service,
            loan-service,
            locker-service,
          ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Run tests for ${{ matrix.service }}
        run: |
          cd ${{ matrix.service }}
          mvn clean test

      - name: Generate test report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Test Results - ${{ matrix.service }}
          path: ${{ matrix.service }}/target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: true

  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Run tests
        run: |
          cd frontend
          npm test -- --coverage --watchAll=false

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./frontend/coverage

  build-backend:
    name: Build Backend Services
    runs-on: ubuntu-latest
    needs: test-backend

    strategy:
      matrix:
        service:
          [
            auth-service,
            transaction-service,
            credit-card-service,
            gift-card-service,
            loan-service,
            locker-service,
            api-gateway,
          ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Build ${{ matrix.service }}
        run: |
          cd ${{ matrix.service }}
          mvn clean package -DskipTests

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.service }}-jar
          path: ${{ matrix.service }}/target/*.jar

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: test-frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend/build

  docker-build:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push auth-service
        uses: docker/build-push-action@v4
        with:
          context: ./auth-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/banking-auth-service:latest,${{ secrets.DOCKER_USERNAME }}/banking-auth-service:${{ github.sha }}

      - name: Build and push transaction-service
        uses: docker/build-push-action@v4
        with:
          context: ./transaction-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/banking-transaction-service:latest,${{ secrets.DOCKER_USERNAME }}/banking-transaction-service:${{ github.sha }}

      - name: Build and push credit-card-service
        uses: docker/build-push-action@v4
        with:
          context: ./credit-card-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/banking-credit-card-service:latest,${{ secrets.DOCKER_USERNAME }}/banking-credit-card-service:${{ github.sha }}

      - name: Build and push gift-card-service
        uses: docker/build-push-action@v4
        with:
          context: ./gift-card-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/banking-gift-card-service:latest,${{ secrets.DOCKER_USERNAME }}/banking-gift-card-service:${{ github.sha }}

      - name: Build and push loan-service
        uses: docker/build-push-action@v4
        with:
          context: ./loan-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/banking-loan-service:latest,${{ secrets.DOCKER_USERNAME }}/banking-loan-service:${{ github.sha }}

      - name: Build and push locker-service
        uses: docker/build-push-action@v4
        with:
          context: ./locker-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/banking-locker-service:latest,${{ secrets.DOCKER_USERNAME }}/banking-locker-service:${{ github.sha }}

      - name: Build and push api-gateway
        uses: docker/build-push-action@v4
        with:
          context: ./api-gateway
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/banking-api-gateway:latest,${{ secrets.DOCKER_USERNAME }}/banking-api-gateway:${{ github.sha }}

      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/banking-frontend:latest,${{ secrets.DOCKER_USERNAME }}/banking-frontend:${{ github.sha }}

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results.sarif"

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [docker-build, security-scan]
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    environment: staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_STAGING }}" | base64 -d > $HOME/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/namespace.yaml
          kubectl apply -f k8s/configmaps/
          kubectl apply -f k8s/secrets/
          kubectl apply -f k8s/deployments/
          kubectl apply -f k8s/services/
          kubectl apply -f k8s/ingress.yaml

      - name: Wait for deployment
        run: |
          kubectl rollout status deployment/auth-service -n banking-staging
          kubectl rollout status deployment/transaction-service -n banking-staging
          kubectl rollout status deployment/credit-card-service -n banking-staging
          kubectl rollout status deployment/gift-card-service -n banking-staging
          kubectl rollout status deployment/loan-service -n banking-staging
          kubectl rollout status deployment/locker-service -n banking-staging
          kubectl rollout status deployment/api-gateway -n banking-staging
          kubectl rollout status deployment/frontend -n banking-staging

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [docker-build, security-scan]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_PROD }}" | base64 -d > $HOME/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/namespace.yaml
          kubectl apply -f k8s/configmaps/
          kubectl apply -f k8s/secrets/
          kubectl apply -f k8s/deployments/
          kubectl apply -f k8s/services/
          kubectl apply -f k8s/ingress.yaml

      - name: Wait for deployment
        run: |
          kubectl rollout status deployment/auth-service -n banking-prod
          kubectl rollout status deployment/transaction-service -n banking-prod
          kubectl rollout status deployment/credit-card-service -n banking-prod
          kubectl rollout status deployment/gift-card-service -n banking-prod
          kubectl rollout status deployment/loan-service -n banking-prod
          kubectl rollout status deployment/locker-service -n banking-prod
          kubectl rollout status deployment/api-gateway -n banking-prod
          kubectl rollout status deployment/frontend -n banking-prod

      - name: Notify deployment
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: "Banking application deployed to production!"
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        if: always()
