version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: banking-mysql
    environment:
      MYSQL_ROOT_PASSWORD: //enter your pw here
      MYSQL_DATABASE: auth_db
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-databases.sql:/docker-entrypoint-initdb.d/init-databases.sql
    networks:
      - banking-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-pPragyan4044@#1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Authentication Service
  auth-service:
    build: ./auth-service
    container_name: auth-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/auth_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Pragyan4044@#1
    depends_on:
      mysql:
        condition: service_healthy
    restart: on-failure
    networks:
      - banking-network

  # Transaction Service
  transaction-service:
    build: ./transaction-service
    container_name: transaction-service
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/transaction_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Pragyan4044@#1
    depends_on:
      - mysql
    networks:
      - banking-network

  # Credit Card Service
  credit-card-service:
    build: ./credit-card-service
    container_name: credit-card-service
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/creditcard_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Pragyan4044@#1
    depends_on:
      - mysql
    networks:
      - banking-network

  # Gift Card Service
  gift-card-service:
    build: ./gift-card-service
    container_name: gift-card-service
    ports:
      - "8084:8084"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/giftcard_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Pragyan4044@#1
    depends_on:
      - mysql
    networks:
      - banking-network

  # Loan Service
  loan-service:
    build: ./loan-service
    container_name: loan-service
    ports:
      - "8085:8085"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/loan_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Pragyan4044@#1
    depends_on:
      - mysql
    networks:
      - banking-network

  # Locker Service
  locker-service:
    build: ./locker-service
    container_name: locker-service
    ports:
      - "8086:8086"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/locker_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Pragyan4044@#1
    depends_on:
      - mysql
    networks:
      - banking-network

  # API Gateway
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      AUTH_SERVICE_URL: http://auth-service:8081
      TRANSACTION_SERVICE_URL: http://transaction-service:8082
      CREDIT_CARD_SERVICE_URL: http://credit-card-service:8083
      GIFT_CARD_SERVICE_URL: http://gift-card-service:8084
      LOAN_SERVICE_URL: http://loan-service:8085
      LOCKER_SERVICE_URL: http://locker-service:8086
    depends_on:
      - auth-service
      - transaction-service
      - credit-card-service
      - gift-card-service
      - loan-service
      - locker-service
    networks:
      - banking-network

  # Frontend
  frontend:
    build: ./frontend
    container_name: banking-frontend
    ports:
      - "3000:80"
    depends_on:
      - api-gateway
    networks:
      - banking-network

volumes:
  mysql_data:


networks:
  banking-network:
    driver: bridge
